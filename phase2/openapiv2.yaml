openapi: 3.0.3
info:
  title: NYC Yellow Taxi Trip Data - OpenAPI 3.0
  description: >-
    This API allows users to interact with a dataset consisting of New York City (NYC) Yellow Taxi
    trip records, focusing on Yellow Medallion Taxicabs. It offers functionalities for scheduling trips,
    calculating routes, analyzing payment methods, searching for alternative routes, and consulting
    average fares. Premium users can schedule recurring trips and calculate the fastest or shortest
    routes. Regular users can access payment method analytics, alternative route searches, and fare
    consultations.

tags:
  - name: Premium
    description: Premium user functionalities, including scheduling recurring trips and calculating routes. Premium users can also access all Regular user functionalities.
  - name: Regular
    description: Regular user functionalities accessible to all users, including payment method analysis, alternative route searches, and average fare consultations.

paths:
  /premium/schedule:
    post:
      tags:
        - Premium
      summary: Schedule recurring trips for special events
      description: Allows a premium user to schedule recurring trips for specific dates and times.
      operationId: scheduleRecurringTrip
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleRequest'
      responses:
        '201':
          description: Recurring trip scheduled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
	'400':
          description: Invalid ID supplied
        '404':
          description: Route not found
        '422':
          description: Validation exception
      security:
        - taxi_auth:
            - write:trips
  /premium/route:
    post:
      tags:
        - Premium
      summary: Calculate the fastest and shortest taxi route
      description: Allows a premium user to obtain the fastest or shortest route for their trip.
      operationId: calculateRoute
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RouteCalculationRequest'
      responses:
        '200':
          description: Route information calculated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RouteCalculationResponse'
	'400':
          description: Invalid ID supplied
        '404':
          description: Route not found
        '422':
          description: Validation exception
     security:
        - taxi_auth:
            - write:trips
   /premium/payment-methods:
    get:
      tags:
        - Regular
      summary: Analyze preferred payment methods
      description: Allows any user to analyze the most common payment methods used in taxi trips.
      operationId: analyzePaymentMethods
      responses:
        '200':
          description: Payment method analysis returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodAnalysisResponse'
	'400':
          description: Invalid ID supplied
        '404':
          description: Route not found
        '422':
          description: Validation exception
     security:
        - taxi_auth:
            - read:payment
  /premium/alternative-routes:
    post:
      tags:
        - Regular
      summary: Search for alternative routes
      description: Allows any user to search for alternative routes based on various criteria.
      operationId: searchAlternativeRoutes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlternativeRouteRequest'
      responses:
        '200':
          description: Alternative routes found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlternativeRouteResponse'
  /regular/average-fares:
    get:
      tags:
        - Regular
      summary: Consultation of average fares
      description: Allows any user to check the average fares for taxi trips during different times.
      operationId: getAverageFares
      responses:
        '200':
          description: Average fares data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AverageFaresResponse'
	'400':
          description: Invalid ID supplied
        '404':
          description: Route not found
        '422':
          description: Validation exception  
  /premium/payment-methods:
    get:
      tags:
        - Regular
      summary: Analyze preferred payment methods
      description: Allows any user to analyze the most common payment methods used in taxi trips.
      operationId: analyzePaymentMethods
      responses:
        '200':
          description: Payment method analysis returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethodAnalysisResponse'
	'400':
          description: Invalid ID supplied
        '404':
          description: Route not found
        '422':
          description: Validation exception
  /regular/alternative-routes:
    post:
      tags:
        - Regular
      summary: Search for alternative routes
      description: Allows any user to search for alternative routes based on various criteria.
      operationId: searchAlternativeRoutes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlternativeRouteRequest'
      responses:
        '200':
          description: Alternative routes found successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlternativeRouteResponse'
     security:
        - taxi_auth:
            - read:trips
  /regular/average-fares:
    get:
      tags:
        - Regular
      summary: Consultation of average fares
      description: Allows any user to check the average fares for taxi trips during different times.
      operationId: getAverageFares
      responses:
        '200':
          description: Average fares data returned successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AverageFaresResponse'
	'400':
          description: Invalid ID supplied
        '404':
          description: Route not found
        '422':
          description: Validation exception
      security:
        - taxi_auth:
            - read:trips
components:
  schemas:
    ScheduleRequest:
      type: object
      required:
        - event
        - dates
      properties:
        event:
          type: string
          example: Business Conference
        dates:
          type: array
          items:
            type: string
            format: date-time
        paymentType:
          type: string
          example: credit_card
        totalAmount:
          type: number
          format: float
          example: 55.25
    ScheduleResponse:
      type: object
      properties:
        confirmationId:
          type: string
          example: "Confirmed"
        scheduledDates:
          type: array
          items:
            type: string
            format: date-time
    RouteCalculationRequest:
      type: object
      required:
        - pickupDateTime
        - pickupLocation
        - dropoffLocation
      properties:
        pickupDateTime:
          type: string
          format: date-time
        pickupLocation:
          $ref: '#/components/schemas/Location'
        dropoffLocation:
          $ref: '#/components/schemas/Location'
        routeType:
          type: string
          enum:
            - fastest
            - shortest
    RouteCalculationResponse:
      type: object
      properties:
        route:
          type: string
          example: "Fastest route via 5th Ave"
        distance:
          type: number
          format: float
          example: 5.2
        estimatedTime:
          type: number
          format: float
          example: 15.5
    PaymentMethodAnalysisResponse:
      type: object
      properties:
        methods:
          type: array
          items:
            $ref: '#/components/schemas/PaymentMethod'
    PaymentMethod:
      type: object
      properties:
        method:
          type: string
          example: "credit_card"
        usageCount:
          type: integer
          example: 150
    AlternativeRouteRequest:
      type: object
      properties:
        pickupLocation:
          $ref: '#/components/schemas/Location'
        dropoffLocation:
          $ref: '#/components/schemas/Location'
        date:
          type: string
          format: date-time
        preferences:
          type: object
          properties:
            avoidTolls:
              type: boolean
            avoidTraffic:
              type: boolean
    AlternativeRouteResponse:
      type: object
      properties:
        routes:
          type: array
          items:
            $ref: '#/components/schemas/RouteOption'
    RouteOption:
      type: object
      properties:
        routeDescription:
          type: string
          example: "Via 7th Ave, without tolls"
        distance:
          type: number
          format: float
          example: 6.3
        estimatedTime:
          type: number
          format: float
          example: 22.0
    AverageFaresResponse:
      type: object
      properties:
        timeOfDay:
          type: string
          example: "Morning"
        averageFare:
          type: number
          format: float
          example: 25.00
    Location:
      type: object
      required:
        - longitude
        - latitude
      properties:
        longitude:
          type: number
          format: double
          example: -73.985130
        latitude:
          type: number
          format: double
          example: 40.758896
  securitySchemes:
    taxi_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: https://link_here_to_be_changed.io/oauth/authorize
          scopes:
            read:trips: read user trip information
            write:trips: create or update user trip information
            read:payment: read user payment methods
            write:payment: create or update user payment methods  


